* Git utilities by Hraban Luyat

Lisp utilities. Currently just the one: =git-graft=.

* Commands

Make sure you’ve followed the [[#installation][Installation]] instructions.

** git graft

Documentation:

#+begin_example
Print a chain of commands to move an entire subtree of git branches.

Usage:

  git-graft ROOT ONTO

Move all branches that are a child of one commit, onto another commit, while
maintaining the git commit tree structure.

ROOT: the first commit under (and including) which all local branches will be
selected.

ONTO: the commit onto which the subtree will be moved.

Example: say after a git fetch, you end up with:

  A -> B -> master -> C -> D -> origin/master
              \
                --> E -> branch1 -> F -> branch2
                           \
                             -----> G -> branch3

Execute this:

  git-graft E origin/master

And you will get a bunch of git commands on stdout. Execute them all, and you
should end up with:

  ... -> D -> origin/master -> E -> branch1 -> F -> branch2
                                      \
                                        -----> G -> branch3

Every local branch under (and including) branch1 will be moved, so be careful
choosing something like (e.g.) master. It will work if all branches under master
are indeed feature branches that you 'own', but if you locally checked out
someone else's branch, it will also be rebased.

Git-graft also prints "undo" commands, commented out. These are not expected to
be necessary for normal operation, but if something goes wrong midway through a
big graft, you can use those commands to go back to the pre-graft state.

The argument to git-graft, the root, is *inclusive*. This is at odds with git
conventions, where you normally specify a commit's 'parent', under which all
relevant commits are found. The reason is that sometimes, e.g. the example
above, choosing the parent can lead to too many branches being included: you'd
get origin/master, and all potential other local branches already ported onto
it.
#+end_example

* Installation
:PROPERTIES:
:CUSTOM_ID: installation
:END:
** Native

You probably want this (Mac & Linux, maybe also Windows?):

1. Install [[https://www.sbcl.org/][SBCL]]:
   =$ brew install sbcl=
2. Install [[https://www.quicklisp.org/][Quicklisp]] (follow the full instructions, up to and including =(ql:add-to-init-file)=)
3. From this directory:

   =$ mkdir -p ~/quicklisp/local-projects && ln -fs "$PWD/src/" ~/quicklisp/local-projects/hly-git-utils=
4. =$ ./ql-install-deps.lisp=
5. =$ ./build.lisp=
6. =$ printf 'export PATH="$PATH:%s/dist/"\n' "$PWD" >> ~/.bashrc=
7. =$ source ~/.bashrc=

You now have a binary =hly-git-utils= in the =./dist/= directory which you can
move wherever you want and run, even without Lisp installed.

To recompile the source later, you only need to run step 5.

After adding the tool to your path, you can invoke commands as sub commands of the binary, e.g.:

#+begin_src shell
hly-git-tools git-graft foo bar
#+end_src

But you can also directly call them as git subcommands:

#+begin_src shell
git graft foo bar
#+end_src

This uses the git convention that any executable called =git-something= on your path will be picked up by the top-level =git= tool and exposed as =git something=.

** Docker

If you insist on Docker:

#+begin_src shell
docker build -t hly-git-utils .
#+end_src

Pros: easy peasy.

Cons: you have to run it dockerized. That’s slow and annoying, especially on Mac
and Windows.

* License

hly-git-tools - Git utilities
Copyright © 2022  Hraban Luyat

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published
by the Free Software Foundation, version 3 of the License.


This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with this program.  If not, see <https://www.gnu.org/licenses/>.

